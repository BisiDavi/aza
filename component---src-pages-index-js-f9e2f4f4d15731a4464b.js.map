{"version":3,"sources":["webpack:///./node_modules/process/browser.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.object.freeze.js","webpack:///./src/pages/index.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/react-spring-loaders/dist/index.es.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.fill.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","isObject","meta","onFreeze","$freeze","it","settings","rebound","tension","friction","spinner","id","radius","sides","depth","colors","background","stroke","base","child","alwaysForward","restAt","renderBase","useStyles","makeStyles","typewrite","textAlign","fontSize","color","banner","marginBottom","IndexPage","classes","src","withPrefix","type","href","rel","className","timeline","Function","Timeout","clearFn","_id","_clearFn","scope","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","self","global","clearImmediate","fn","createCommonjsModule","util","slice","bind","func","context","extend","target","source","key","hasOwnProperty","SpringSystem","looper","_springRegistry","_activeSprings","_idleSpringIndices","AnimationLooper","springSystem","_isIdle","_lastTimeMillis","setLooper","createSpring","springConfig","undefined","SpringConfig","DEFAULT_ORIGAMI_SPRING_CONFIG","fromOrigamiTensionAndFriction","createSpringWithConfig","createSpringWithBouncinessAndSpeed","bounciness","speed","fromBouncinessAndSpeed","spring","Spring","registerSpring","setSpringConfig","getIsIdle","getSpringById","getAllSprings","vals","getId","deregisterSpring","removeFirst","advance","time","deltaTime","pop","systemShouldAdvance","indexOf","idx","splice","loop","currentTimeMillis","listener","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","activateSpring","springId","_ID","_springSystem","_currentState","PhysicsState","_previousState","_tempState","MAX_DELTA_TIME_SEC","SOLVER_TIMESTEP_SEC","_springConfig","_overshootClampingEnabled","_startValue","_endValue","_wasAtRest","_restSpeedThreshold","_displacementFromRestThreshold","_timeAccumulator","destroy","frames","getSpringConfig","setCurrentValue","currentValue","skipSetAtRest","position","setAtRest","notifyPositionUpdated","getStartValue","getCurrentValue","getCurrentDisplacementDistance","getDisplacementDistanceForState","state","Math","abs","setEndValue","endValue","isAtRest","onChange","onSpringEndStateChange","getEndValue","setVelocity","velocity","getVelocity","setRestSpeedThreshold","restSpeedThreshold","getRestSpeedThreshold","setRestDisplacementThreshold","displacementFromRestThreshold","getRestDisplacementThreshold","setOvershootClampingEnabled","enabled","isOvershootClampingEnabled","isOvershooting","start","end","realDeltaTime","adjustedDeltaTime","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","dVelocity","dvdt","tempPosition","tempVelocity","_interpolate","notifyActivate","notifyAtRest","onSpringActivate","onSpringUpdate","onSpringAtRest","wasAtRest","alpha","getListeners","newListener","listenerToRemove","currentValueIsApproximately","value","_this","_run","Date","now","onFrame","SimulationLooper","timestep","running","SteppingSimulationLooper","step","OrigamiValueConverter","tensionFromOrigamiValue","oValue","origamiValueFromTension","frictionFromOrigamiValue","origamiFromFriction","BouncyConversion","b","normalize","projectNormal","s","bouncyTension","bouncyFriction","quadraticOutInterpolation","b3Nobounce","startValue","n","linearInterpolation","t","b3Friction1","x","pow","b3Friction2","b3Friction3","bouncyConversion","coastingConfigWithOrigamiFriction","colorCache","hexToRGB","replace","parts","match","ret","r","parseInt","g","rgbToHex","toString","_onFrame","MathUtil","mapValueInRange","fromLow","fromHigh","toLow","toHigh","interpolateColor","val","startColor","endColor","asRGB","floor","degreesToRadians","deg","PI","radiansToDegrees","rad","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","callback","rebound$1","Object","freeze","__moduleExports","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","Polygon","_radius","_sides","_depth","_colors","_x","_y","rotation","scale","points","_getRegularPolygonPoints","sin","y","cos","progress","inscribedPoints","forEach","point","_getInterpolatedPoint","Ax","Ay","children","_getInscribedPoints","_this2","_getUpdatedChildren","beginPath","lineTo","closePath","strokeColor","childColor","strokeStyle","rgb","alphaUnit","rgba","fillStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","fill","save","translate","rotate","restore","Polygon$1","console","log","Spinner","params","warn","_canvas","document","createElement","style","backgroundColor","_canvasW","_canvasH","_canvasOpacity","_centerX","_centerY","_alwaysForward","_restThreshold","_renderBase","_springRangeLow","_springRangeHigh","_basePolygon","_progress","_isAutoSpin","_isCompleting","autoSpin","_addCanvas","_spring","_addSpringListener","_spin","render","body","appendChild","_context","getContext","_setCanvasSize","width","innerWidth","height","innerHeight","top","left","ctx","opacity","remove","_switchSpringRange","threshold","round","_completeAnimation","clearRect","lineWidth","renderChildren","Spinner$1","demo","initRebound","settingsRebound","initSpinner","settingsSpinner","init","setComplete","loadSomething","oReq","XMLHttpRequest","addEventListener","oEvent","lengthComputable","percent","ceil","loaded","total","open","send","SpringLoader","_Component","ReferenceError","possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","constructor","setPrototypeOf","inherits","defaultProps","toObject","toAbsoluteIndex","toLength","O","aLen","index","endPos","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","event","data","port2","documentElement","script","onreadystatechange","removeChild","random","attachEvent","task","$export","P"],"mappings":"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","file":"component---src-pages-index-js-f9e2f4f4d15731a4464b.js","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","import React from \"react\";\r\nimport { Layout, SEO, Typewrite, AzaTimeline, Autoslider } from '../components/imports';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Helmet } from 'react-helmet';\r\nimport { withPrefix } from 'gatsby';\r\nimport SpringLoader from \"react-spring-loaders\";\r\n\r\nconst settings = {\r\n  rebound: {\r\n    tension: 14,\r\n    friction: 10\r\n  },\r\n  spinner: {\r\n    id: \"spinner\",\r\n    radius: 90,\r\n    sides: 6,\r\n    depth: 8,\r\n    colors: {\r\n      background: \"#00272C\",\r\n      stroke: null,\r\n      base: null,\r\n      child: \"#02C39A\"\r\n    },\r\n    alwaysForward: true, // When false the spring will reverse normally.\r\n    restAt: null, // A number from 0.1 to 0.9 || null for full rotation\r\n    renderBase: false\r\n  }\r\n};\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  typewrite: {\r\n    textAlign: 'center',\r\n    fontSize: 30,\r\n    color: 'red'\r\n  },\r\n  banner: {\r\n    marginBottom: 20\r\n  }\r\n});\r\n\r\n\r\nconst IndexPage = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n      <SpringLoader settings={settings} />\r\n      <Layout>\r\n        <Helmet>\r\n          <script src={withPrefix('pace.js')} type=\"text/javascript\" />\r\n          <link href={withPrefix('pace.css')} type=\"text/css\" rel=\"stylesheet\" />\r\n        </Helmet>\r\n        <SEO title=\"Home - Get 50% ROI when you invest\" />\r\n\r\n        <div className={classes.banner}>\r\n          <Autoslider />\r\n        </div>\r\n        <span className={classes.typewrite}>\r\n          <Typewrite />\r\n        </span>\r\n        <span className={classes.timeline}>\r\n          <AzaTimeline />\r\n        </span>\r\n      </Layout >\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n","var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\nrequire(\"setimmediate\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;","import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.object.set-prototype-of\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.freeze\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.date.now\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.function.bind\";\nimport { Component } from 'react';\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar rebound = createCommonjsModule(function (module, exports) {\n  // Rebound\n  // =======\n  // **Rebound** is a simple library that models Spring dynamics for the\n  // purpose of driving physical animations.\n  //\n  // Origin\n  // ------\n  // [Rebound](http://facebook.github.io/rebound) was originally written\n  // in Java to provide a lightweight physics system for\n  // [Home](https://play.google.com/store/apps/details?id=com.facebook.home) and\n  // [Chat Heads](https://play.google.com/store/apps/details?id=com.facebook.orca)\n  // on Android. It's now been adopted by several other Android\n  // applications. This JavaScript port was written to provide a quick\n  // way to demonstrate Rebound animations on the web for a\n  // [conference talk](https://www.youtube.com/watch?v=s5kNm-DgyjY). Since then\n  // the JavaScript version has been used to build some really nice interfaces.\n  // Check out [brandonwalkin.com](http://brandonwalkin.com) for an\n  // example.\n  //\n  // Overview\n  // --------\n  // The Library provides a SpringSystem for maintaining a set of Spring\n  // objects and iterating those Springs through a physics solver loop\n  // until equilibrium is achieved. The Spring class is the basic\n  // animation driver provided by Rebound. By attaching a listener to\n  // a Spring, you can observe its motion. The observer function is\n  // notified of position changes on the spring as it solves for\n  // equilibrium. These position updates can be mapped to an animation\n  // range to drive animated property updates on your user interface\n  // elements (translation, rotation, scale, etc).\n  //\n  // Example\n  // -------\n  // Here's a simple example. Pressing and releasing on the logo below\n  // will cause it to scale up and down with a springy animation.\n  //\n  // <div style=\"text-align:center; margin-bottom:50px; margin-top:50px\">\n  //   <img\n  //     src=\"http://facebook.github.io/rebound/images/rebound.png\"\n  //     id=\"logo\"\n  //   />\n  // </div>\n  // <script src=\"../rebound.min.js\"></script>\n  // <script>\n  //\n  // function scale(el, val) {\n  //   el.style.mozTransform =\n  //   el.style.msTransform =\n  //   el.style.webkitTransform =\n  //   el.style.transform = 'scale3d(' + val + ', ' + val + ', 1)';\n  // }\n  // var el = document.getElementById('logo');\n  //\n  // var springSystem = new rebound.SpringSystem();\n  // var spring = springSystem.createSpring(50, 3);\n  // spring.addListener({\n  //   onSpringUpdate: function(spring) {\n  //     var val = spring.getCurrentValue();\n  //     val = rebound.MathUtil.mapValueInRange(val, 0, 1, 1, 0.5);\n  //     scale(el, val);\n  //   }\n  // });\n  //\n  // el.addEventListener('mousedown', function() {\n  //   spring.setEndValue(1);\n  // });\n  //\n  // el.addEventListener('mouseout', function() {\n  //   spring.setEndValue(0);\n  // });\n  //\n  // el.addEventListener('mouseup', function() {\n  //   spring.setEndValue(0);\n  // });\n  //\n  // </script>\n  //\n  // Here's how it works.\n  //\n  // ```\n  // // Get a reference to the logo element.\n  // var el = document.getElementById('logo');\n  //\n  // // create a SpringSystem and a Spring with a bouncy config.\n  // var springSystem = new rebound.SpringSystem();\n  // var spring = springSystem.createSpring(50, 3);\n  //\n  // // Add a listener to the spring. Every time the physics\n  // // solver updates the Spring's value onSpringUpdate will\n  // // be called.\n  // spring.addListener({\n  //   onSpringUpdate: function(spring) {\n  //     var val = spring.getCurrentValue();\n  //     val = rebound.MathUtil\n  //                  .mapValueInRange(val, 0, 1, 1, 0.5);\n  //     scale(el, val);\n  //   }\n  // });\n  //\n  // // Listen for mouse down/up/out and toggle the\n  // //springs endValue from 0 to 1.\n  // el.addEventListener('mousedown', function() {\n  //   spring.setEndValue(1);\n  // });\n  //\n  // el.addEventListener('mouseout', function() {\n  //   spring.setEndValue(0);\n  // });\n  //\n  // el.addEventListener('mouseup', function() {\n  //   spring.setEndValue(0);\n  // });\n  //\n  // // Helper for scaling an element with css transforms.\n  // function scale(el, val) {\n  //   el.style.mozTransform =\n  //   el.style.msTransform =\n  //   el.style.webkitTransform =\n  //   el.style.transform = 'scale3d(' +\n  //     val + ', ' + val + ', 1)';\n  // }\n  // ```\n  (function () {\n    var rebound = {};\n    var util = rebound.util = {};\n    var concat = Array.prototype.concat;\n    var slice = Array.prototype.slice; // Bind a function to a context object.\n\n    util.bind = function bind(func, context) {\n      var args = slice.call(arguments, 2);\n      return function () {\n        func.apply(context, concat.call(args, slice.call(arguments)));\n      };\n    }; // Add all the properties in the source to the target.\n\n\n    util.extend = function extend(target, source) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          target[key] = source[key];\n        }\n      }\n    }; // SpringSystem\n    // ------------\n    // **SpringSystem** is a set of Springs that all run on the same physics\n    // timing loop. To get started with a Rebound animation you first\n    // create a new SpringSystem and then add springs to it.\n\n\n    var SpringSystem = rebound.SpringSystem = function SpringSystem(looper) {\n      this._springRegistry = {};\n      this._activeSprings = [];\n      this.listeners = [];\n      this._idleSpringIndices = [];\n      this.looper = looper || new AnimationLooper();\n      this.looper.springSystem = this;\n    };\n\n    util.extend(SpringSystem.prototype, {\n      _springRegistry: null,\n      _isIdle: true,\n      _lastTimeMillis: -1,\n      _activeSprings: null,\n      listeners: null,\n      _idleSpringIndices: null,\n      // A SpringSystem is iterated by a looper. The looper is responsible\n      // for executing each frame as the SpringSystem is resolved to idle.\n      // There are three types of Loopers described below AnimationLooper,\n      // SimulationLooper, and SteppingSimulationLooper. AnimationLooper is\n      // the default as it is the most useful for common UI animations.\n      setLooper: function setLooper(looper) {\n        this.looper = looper;\n        looper.springSystem = this;\n      },\n      // Add a new spring to this SpringSystem. This Spring will now be solved for\n      // during the physics iteration loop. By default the spring will use the\n      // default Origami spring config with 40 tension and 7 friction, but you can\n      // also provide your own values here.\n      createSpring: function createSpring(tension, friction) {\n        var springConfig;\n\n        if (tension === undefined || friction === undefined) {\n          springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n        } else {\n          springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);\n        }\n\n        return this.createSpringWithConfig(springConfig);\n      },\n      // Add a spring with a specified bounciness and speed. To replicate Origami\n      // compositions based on PopAnimation patches, use this factory method to\n      // create matching springs.\n      createSpringWithBouncinessAndSpeed: function createSpringWithBouncinessAndSpeed(bounciness, speed) {\n        var springConfig;\n\n        if (bounciness === undefined || speed === undefined) {\n          springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n        } else {\n          springConfig = SpringConfig.fromBouncinessAndSpeed(bounciness, speed);\n        }\n\n        return this.createSpringWithConfig(springConfig);\n      },\n      // Add a spring with the provided SpringConfig.\n      createSpringWithConfig: function createSpringWithConfig(springConfig) {\n        var spring = new Spring(this);\n        this.registerSpring(spring);\n        spring.setSpringConfig(springConfig);\n        return spring;\n      },\n      // You can check if a SpringSystem is idle or active by calling\n      // getIsIdle. If all of the Springs in the SpringSystem are at rest,\n      // i.e. the physics forces have reached equilibrium, then this\n      // method will return true.\n      getIsIdle: function getIsIdle() {\n        return this._isIdle;\n      },\n      // Retrieve a specific Spring from the SpringSystem by id. This\n      // can be useful for inspecting the state of a spring before\n      // or after an integration loop in the SpringSystem executes.\n      getSpringById: function getSpringById(id) {\n        return this._springRegistry[id];\n      },\n      // Get a listing of all the springs registered with this\n      // SpringSystem.\n      getAllSprings: function getAllSprings() {\n        var vals = [];\n\n        for (var id in this._springRegistry) {\n          if (this._springRegistry.hasOwnProperty(id)) {\n            vals.push(this._springRegistry[id]);\n          }\n        }\n\n        return vals;\n      },\n      // registerSpring is called automatically as soon as you create\n      // a Spring with SpringSystem#createSpring. This method sets the\n      // spring up in the registry so that it can be solved in the\n      // solver loop.\n      registerSpring: function registerSpring(spring) {\n        this._springRegistry[spring.getId()] = spring;\n      },\n      // Deregister a spring with this SpringSystem. The SpringSystem will\n      // no longer consider this Spring during its integration loop once\n      // this is called. This is normally done automatically for you when\n      // you call Spring#destroy.\n      deregisterSpring: function deregisterSpring(spring) {\n        removeFirst(this._activeSprings, spring);\n        delete this._springRegistry[spring.getId()];\n      },\n      advance: function advance(time, deltaTime) {\n        while (this._idleSpringIndices.length > 0) {\n          this._idleSpringIndices.pop();\n        }\n\n        for (var i = 0, len = this._activeSprings.length; i < len; i++) {\n          var spring = this._activeSprings[i];\n\n          if (spring.systemShouldAdvance()) {\n            spring.advance(time / 1000.0, deltaTime / 1000.0);\n          } else {\n            this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\n          }\n        }\n\n        while (this._idleSpringIndices.length > 0) {\n          var idx = this._idleSpringIndices.pop();\n\n          idx >= 0 && this._activeSprings.splice(idx, 1);\n        }\n      },\n      // This is our main solver loop called to move the simulation\n      // forward through time. Before each pass in the solver loop\n      // onBeforeIntegrate is called on an any listeners that have\n      // registered themeselves with the SpringSystem. This gives you\n      // an opportunity to apply any constraints or adjustments to\n      // the springs that should be enforced before each iteration\n      // loop. Next the advance method is called to move each Spring in\n      // the systemShouldAdvance forward to the current time. After the\n      // integration step runs in advance, onAfterIntegrate is called\n      // on any listeners that have registered themselves with the\n      // SpringSystem. This gives you an opportunity to run any post\n      // integration constraints or adjustments on the Springs in the\n      // SpringSystem.\n      loop: function loop(currentTimeMillis) {\n        var listener;\n\n        if (this._lastTimeMillis === -1) {\n          this._lastTimeMillis = currentTimeMillis - 1;\n        }\n\n        var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\n        this._lastTimeMillis = currentTimeMillis;\n        var i = 0,\n            len = this.listeners.length;\n\n        for (i = 0; i < len; i++) {\n          listener = this.listeners[i];\n          listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\n        }\n\n        this.advance(currentTimeMillis, ellapsedMillis);\n\n        if (this._activeSprings.length === 0) {\n          this._isIdle = true;\n          this._lastTimeMillis = -1;\n        }\n\n        for (i = 0; i < len; i++) {\n          listener = this.listeners[i];\n          listener.onAfterIntegrate && listener.onAfterIntegrate(this);\n        }\n\n        if (!this._isIdle) {\n          this.looper.run();\n        }\n      },\n      // activateSpring is used to notify the SpringSystem that a Spring\n      // has become displaced. The system responds by starting its solver\n      // loop up if it is currently idle.\n      activateSpring: function activateSpring(springId) {\n        var spring = this._springRegistry[springId];\n\n        if (this._activeSprings.indexOf(spring) == -1) {\n          this._activeSprings.push(spring);\n        }\n\n        if (this.getIsIdle()) {\n          this._isIdle = false;\n          this.looper.run();\n        }\n      },\n      // Add a listener to the SpringSystem so that you can receive\n      // before/after integration notifications allowing Springs to be\n      // constrained or adjusted.\n      addListener: function addListener(listener) {\n        this.listeners.push(listener);\n      },\n      // Remove a previously added listener on the SpringSystem.\n      removeListener: function removeListener(listener) {\n        removeFirst(this.listeners, listener);\n      },\n      // Remove all previously added listeners on the SpringSystem.\n      removeAllListeners: function removeAllListeners() {\n        this.listeners = [];\n      }\n    }); // Spring\n    // ------\n    // **Spring** provides a model of a classical spring acting to\n    // resolve a body to equilibrium. Springs have configurable\n    // tension which is a force multipler on the displacement of the\n    // spring from its rest point or `endValue` as defined by [Hooke's\n    // law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n    // configurable friction, which ensures that they do not oscillate\n    // infinitely. When a Spring is displaced by updating it's resting\n    // or `currentValue`, the SpringSystems that contain that Spring\n    // will automatically start looping to solve for equilibrium. As each\n    // timestep passes, `SpringListener` objects attached to the Spring\n    // will be notified of the updates providing a way to drive an\n    // animation off of the spring's resolution curve.\n\n    var Spring = rebound.Spring = function Spring(springSystem) {\n      this._id = 's' + Spring._ID++;\n      this._springSystem = springSystem;\n      this.listeners = [];\n      this._currentState = new PhysicsState();\n      this._previousState = new PhysicsState();\n      this._tempState = new PhysicsState();\n    };\n\n    util.extend(Spring, {\n      _ID: 0,\n      MAX_DELTA_TIME_SEC: 0.064,\n      SOLVER_TIMESTEP_SEC: 0.001\n    });\n    util.extend(Spring.prototype, {\n      _id: 0,\n      _springConfig: null,\n      _overshootClampingEnabled: false,\n      _currentState: null,\n      _previousState: null,\n      _tempState: null,\n      _startValue: 0,\n      _endValue: 0,\n      _wasAtRest: true,\n      _restSpeedThreshold: 0.001,\n      _displacementFromRestThreshold: 0.001,\n      listeners: null,\n      _timeAccumulator: 0,\n      _springSystem: null,\n      // Remove a Spring from simulation and clear its listeners.\n      destroy: function destroy() {\n        this.listeners = [];\n        this.frames = [];\n\n        this._springSystem.deregisterSpring(this);\n      },\n      // Get the id of the spring, which can be used to retrieve it from\n      // the SpringSystems it participates in later.\n      getId: function getId() {\n        return this._id;\n      },\n      // Set the configuration values for this Spring. A SpringConfig\n      // contains the tension and friction values used to solve for the\n      // equilibrium of the Spring in the physics loop.\n      setSpringConfig: function setSpringConfig(springConfig) {\n        this._springConfig = springConfig;\n        return this;\n      },\n      // Retrieve the SpringConfig used by this Spring.\n      getSpringConfig: function getSpringConfig() {\n        return this._springConfig;\n      },\n      // Set the current position of this Spring. Listeners will be updated\n      // with this value immediately. If the rest or `endValue` is not\n      // updated to match this value, then the spring will be dispalced and\n      // the SpringSystem will start to loop to restore the spring to the\n      // `endValue`.\n      //\n      // A common pattern is to move a Spring around without animation by\n      // calling.\n      //\n      // ```\n      // spring.setCurrentValue(n).setAtRest();\n      // ```\n      //\n      // This moves the Spring to a new position `n`, sets the endValue\n      // to `n`, and removes any velocity from the `Spring`. By doing\n      // this you can allow the `SpringListener` to manage the position\n      // of UI elements attached to the spring even when moving without\n      // animation. For example, when dragging an element you can\n      // update the position of an attached view through a spring\n      // by calling `spring.setCurrentValue(x)`. When\n      // the gesture ends you can update the Springs\n      // velocity and endValue\n      // `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`\n      // to cause it to naturally animate the UI element to the resting\n      // position taking into account existing velocity. The codepaths for\n      // synchronous movement and spring driven animation can\n      // be unified using this technique.\n      setCurrentValue: function setCurrentValue(currentValue, skipSetAtRest) {\n        this._startValue = currentValue;\n        this._currentState.position = currentValue;\n\n        if (!skipSetAtRest) {\n          this.setAtRest();\n        }\n\n        this.notifyPositionUpdated(false, false);\n        return this;\n      },\n      // Get the position that the most recent animation started at. This\n      // can be useful for determining the number off oscillations that\n      // have occurred.\n      getStartValue: function getStartValue() {\n        return this._startValue;\n      },\n      // Retrieve the current value of the Spring.\n      getCurrentValue: function getCurrentValue() {\n        return this._currentState.position;\n      },\n      // Get the absolute distance of the Spring from it's resting endValue\n      // position.\n      getCurrentDisplacementDistance: function getCurrentDisplacementDistance() {\n        return this.getDisplacementDistanceForState(this._currentState);\n      },\n      getDisplacementDistanceForState: function getDisplacementDistanceForState(state) {\n        return Math.abs(this._endValue - state.position);\n      },\n      // Set the endValue or resting position of the spring. If this\n      // value is different than the current value, the SpringSystem will\n      // be notified and will begin running its solver loop to resolve\n      // the Spring to equilibrium. Any listeners that are registered\n      // for onSpringEndStateChange will also be notified of this update\n      // immediately.\n      setEndValue: function setEndValue(endValue) {\n        if (this._endValue == endValue && this.isAtRest()) {\n          return this;\n        }\n\n        this._startValue = this.getCurrentValue();\n        this._endValue = endValue;\n\n        this._springSystem.activateSpring(this.getId());\n\n        for (var i = 0, len = this.listeners.length; i < len; i++) {\n          var listener = this.listeners[i];\n          var onChange = listener.onSpringEndStateChange;\n          onChange && onChange(this);\n        }\n\n        return this;\n      },\n      // Retrieve the endValue or resting position of this spring.\n      getEndValue: function getEndValue() {\n        return this._endValue;\n      },\n      // Set the current velocity of the Spring. As previously mentioned,\n      // this can be useful when you are performing a direct manipulation\n      // gesture. When a UI element is released you may call setVelocity\n      // on its animation Spring so that the Spring continues with the\n      // same velocity as the gesture ended with. The friction, tension,\n      // and displacement of the Spring will then govern its motion to\n      // return to rest on a natural feeling curve.\n      setVelocity: function setVelocity(velocity) {\n        if (velocity === this._currentState.velocity) {\n          return this;\n        }\n\n        this._currentState.velocity = velocity;\n\n        this._springSystem.activateSpring(this.getId());\n\n        return this;\n      },\n      // Get the current velocity of the Spring.\n      getVelocity: function getVelocity() {\n        return this._currentState.velocity;\n      },\n      // Set a threshold value for the movement speed of the Spring below\n      // which it will be considered to be not moving or resting.\n      setRestSpeedThreshold: function setRestSpeedThreshold(restSpeedThreshold) {\n        this._restSpeedThreshold = restSpeedThreshold;\n        return this;\n      },\n      // Retrieve the rest speed threshold for this Spring.\n      getRestSpeedThreshold: function getRestSpeedThreshold() {\n        return this._restSpeedThreshold;\n      },\n      // Set a threshold value for displacement below which the Spring\n      // will be considered to be not displaced i.e. at its resting\n      // `endValue`.\n      setRestDisplacementThreshold: function setRestDisplacementThreshold(displacementFromRestThreshold) {\n        this._displacementFromRestThreshold = displacementFromRestThreshold;\n      },\n      // Retrieve the rest displacement threshold for this spring.\n      getRestDisplacementThreshold: function getRestDisplacementThreshold() {\n        return this._displacementFromRestThreshold;\n      },\n      // Enable overshoot clamping. This means that the Spring will stop\n      // immediately when it reaches its resting position regardless of\n      // any existing momentum it may have. This can be useful for certain\n      // types of animations that should not oscillate such as a scale\n      // down to 0 or alpha fade.\n      setOvershootClampingEnabled: function setOvershootClampingEnabled(enabled) {\n        this._overshootClampingEnabled = enabled;\n        return this;\n      },\n      // Check if overshoot clamping is enabled for this spring.\n      isOvershootClampingEnabled: function isOvershootClampingEnabled() {\n        return this._overshootClampingEnabled;\n      },\n      // Check if the Spring has gone past its end point by comparing\n      // the direction it was moving in when it started to the current\n      // position and end value.\n      isOvershooting: function isOvershooting() {\n        var start = this._startValue;\n        var end = this._endValue;\n        return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);\n      },\n      // Spring.advance is the main solver method for the Spring. It takes\n      // the current time and delta since the last time step and performs\n      // an RK4 integration to get the new position and velocity state\n      // for the Spring based on the tension, friction, velocity, and\n      // displacement of the Spring.\n      advance: function advance(time, realDeltaTime) {\n        var isAtRest = this.isAtRest();\n\n        if (isAtRest && this._wasAtRest) {\n          return;\n        }\n\n        var adjustedDeltaTime = realDeltaTime;\n\n        if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\n          adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\n        }\n\n        this._timeAccumulator += adjustedDeltaTime;\n        var tension = this._springConfig.tension,\n            friction = this._springConfig.friction,\n            position = this._currentState.position,\n            velocity = this._currentState.velocity,\n            tempPosition = this._tempState.position,\n            tempVelocity = this._tempState.velocity,\n            aVelocity,\n            aAcceleration,\n            bVelocity,\n            bAcceleration,\n            cVelocity,\n            cAcceleration,\n            dVelocity,\n            dAcceleration,\n            dxdt,\n            dvdt;\n\n        while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\n          this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\n\n          if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\n            this._previousState.position = position;\n            this._previousState.velocity = velocity;\n          }\n\n          aVelocity = velocity;\n          aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;\n          tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n          tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n          bVelocity = tempVelocity;\n          bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n          tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n          tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n          cVelocity = tempVelocity;\n          cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n          tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n          tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n          dVelocity = tempVelocity;\n          dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n          dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\n          dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);\n          position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\n          velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\n        }\n\n        this._tempState.position = tempPosition;\n        this._tempState.velocity = tempVelocity;\n        this._currentState.position = position;\n        this._currentState.velocity = velocity;\n\n        if (this._timeAccumulator > 0) {\n          this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\n        }\n\n        if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {\n          if (this._springConfig.tension > 0) {\n            this._startValue = this._endValue;\n            this._currentState.position = this._endValue;\n          } else {\n            this._endValue = this._currentState.position;\n            this._startValue = this._endValue;\n          }\n\n          this.setVelocity(0);\n          isAtRest = true;\n        }\n\n        var notifyActivate = false;\n\n        if (this._wasAtRest) {\n          this._wasAtRest = false;\n          notifyActivate = true;\n        }\n\n        var notifyAtRest = false;\n\n        if (isAtRest) {\n          this._wasAtRest = true;\n          notifyAtRest = true;\n        }\n\n        this.notifyPositionUpdated(notifyActivate, notifyAtRest);\n      },\n      notifyPositionUpdated: function notifyPositionUpdated(notifyActivate, notifyAtRest) {\n        for (var i = 0, len = this.listeners.length; i < len; i++) {\n          var listener = this.listeners[i];\n\n          if (notifyActivate && listener.onSpringActivate) {\n            listener.onSpringActivate(this);\n          }\n\n          if (listener.onSpringUpdate) {\n            listener.onSpringUpdate(this);\n          }\n\n          if (notifyAtRest && listener.onSpringAtRest) {\n            listener.onSpringAtRest(this);\n          }\n        }\n      },\n      // Check if the SpringSystem should advance. Springs are advanced\n      // a final frame after they reach equilibrium to ensure that the\n      // currentValue is exactly the requested endValue regardless of the\n      // displacement threshold.\n      systemShouldAdvance: function systemShouldAdvance() {\n        return !this.isAtRest() || !this.wasAtRest();\n      },\n      wasAtRest: function wasAtRest() {\n        return this._wasAtRest;\n      },\n      // Check if the Spring is atRest meaning that it's currentValue and\n      // endValue are the same and that it has no velocity. The previously\n      // described thresholds for speed and displacement define the bounds\n      // of this equivalence check. If the Spring has 0 tension, then it will\n      // be considered at rest whenever its absolute velocity drops below the\n      // restSpeedThreshold.\n      isAtRest: function isAtRest() {\n        return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);\n      },\n      // Force the spring to be at rest at its current position. As\n      // described in the documentation for setCurrentValue, this method\n      // makes it easy to do synchronous non-animated updates to ui\n      // elements that are attached to springs via SpringListeners.\n      setAtRest: function setAtRest() {\n        this._endValue = this._currentState.position;\n        this._tempState.position = this._currentState.position;\n        this._currentState.velocity = 0;\n        return this;\n      },\n      _interpolate: function _interpolate(alpha) {\n        this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);\n        this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);\n      },\n      getListeners: function getListeners() {\n        return this.listeners;\n      },\n      addListener: function addListener(newListener) {\n        this.listeners.push(newListener);\n        return this;\n      },\n      removeListener: function removeListener(listenerToRemove) {\n        removeFirst(this.listeners, listenerToRemove);\n        return this;\n      },\n      removeAllListeners: function removeAllListeners() {\n        this.listeners = [];\n        return this;\n      },\n      currentValueIsApproximately: function currentValueIsApproximately(value) {\n        return Math.abs(this.getCurrentValue() - value) <= this.getRestDisplacementThreshold();\n      }\n    }); // PhysicsState\n    // ------------\n    // **PhysicsState** consists of a position and velocity. A Spring uses\n    // this internally to keep track of its current and prior position and\n    // velocity values.\n\n    var PhysicsState = function PhysicsState() {};\n\n    util.extend(PhysicsState.prototype, {\n      position: 0,\n      velocity: 0\n    }); // SpringConfig\n    // ------------\n    // **SpringConfig** maintains a set of tension and friction constants\n    // for a Spring. You can use fromOrigamiTensionAndFriction to convert\n    // values from the [Origami](http://facebook.github.io/origami/)\n    // design tool directly to Rebound spring constants.\n\n    var SpringConfig = rebound.SpringConfig = function SpringConfig(tension, friction) {\n      this.tension = tension;\n      this.friction = friction;\n    }; // Loopers\n    // -------\n    // **AnimationLooper** plays each frame of the SpringSystem on animation\n    // timing loop. This is the default type of looper for a new spring system\n    // as it is the most common when developing UI.\n\n\n    var AnimationLooper = rebound.AnimationLooper = function AnimationLooper() {\n      this.springSystem = null;\n\n      var _this = this;\n\n      var _run = function _run() {\n        _this.springSystem.loop(Date.now());\n      };\n\n      this.run = function () {\n        util.onFrame(_run);\n      };\n    }; // **SimulationLooper** resolves the SpringSystem to a resting state in a\n    // tight and blocking loop. This is useful for synchronously generating\n    // pre-recorded animations that can then be played on a timing loop later.\n    // Sometimes this lead to better performance to pre-record a single spring\n    // curve and use it to drive many animations; however, it can make dynamic\n    // response to user input a bit trickier to implement.\n\n\n    rebound.SimulationLooper = function SimulationLooper(timestep) {\n      this.springSystem = null;\n      var time = 0;\n      var running = false;\n      timestep = timestep || 16.667;\n\n      this.run = function () {\n        if (running) {\n          return;\n        }\n\n        running = true;\n\n        while (!this.springSystem.getIsIdle()) {\n          this.springSystem.loop(time += timestep);\n        }\n\n        running = false;\n      };\n    }; // **SteppingSimulationLooper** resolves the SpringSystem one step at a\n    // time controlled by an outside loop. This is useful for testing and\n    // verifying the behavior of a SpringSystem or if you want to control your own\n    // timing loop for some reason e.g. slowing down or speeding up the\n    // simulation.\n\n\n    rebound.SteppingSimulationLooper = function (timestep) {\n      this.springSystem = null;\n      var time = 0; // this.run is NOOP'd here to allow control from the outside using\n      // this.step.\n\n      this.run = function () {}; // Perform one step toward resolving the SpringSystem.\n\n\n      this.step = function (timestep) {\n        this.springSystem.loop(time += timestep);\n      };\n    }; // Math for converting from\n    // [Origami](http://facebook.github.io/origami/) to\n    // [Rebound](http://facebook.github.io/rebound).\n    // You mostly don't need to worry about this, just use\n    // SpringConfig.fromOrigamiTensionAndFriction(v, v);\n\n\n    var OrigamiValueConverter = rebound.OrigamiValueConverter = {\n      tensionFromOrigamiValue: function tensionFromOrigamiValue(oValue) {\n        return (oValue - 30.0) * 3.62 + 194.0;\n      },\n      origamiValueFromTension: function origamiValueFromTension(tension) {\n        return (tension - 194.0) / 3.62 + 30.0;\n      },\n      frictionFromOrigamiValue: function frictionFromOrigamiValue(oValue) {\n        return (oValue - 8.0) * 3.0 + 25.0;\n      },\n      origamiFromFriction: function origamiFromFriction(friction) {\n        return (friction - 25.0) / 3.0 + 8.0;\n      }\n    }; // BouncyConversion provides math for converting from Origami PopAnimation\n    // config values to regular Origami tension and friction values. If you are\n    // trying to replicate prototypes made with PopAnimation patches in Origami,\n    // then you should create your springs with\n    // SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math\n    // internally to create a spring to match the provided PopAnimation\n    // configuration from Origami.\n\n    var BouncyConversion = rebound.BouncyConversion = function (bounciness, speed) {\n      this.bounciness = bounciness;\n      this.speed = speed;\n      var b = this.normalize(bounciness / 1.7, 0, 20.0);\n      b = this.projectNormal(b, 0.0, 0.8);\n      var s = this.normalize(speed / 1.7, 0, 20.0);\n      this.bouncyTension = this.projectNormal(s, 0.5, 200);\n      this.bouncyFriction = this.quadraticOutInterpolation(b, this.b3Nobounce(this.bouncyTension), 0.01);\n    };\n\n    util.extend(BouncyConversion.prototype, {\n      normalize: function normalize(value, startValue, endValue) {\n        return (value - startValue) / (endValue - startValue);\n      },\n      projectNormal: function projectNormal(n, start, end) {\n        return start + n * (end - start);\n      },\n      linearInterpolation: function linearInterpolation(t, start, end) {\n        return t * end + (1.0 - t) * start;\n      },\n      quadraticOutInterpolation: function quadraticOutInterpolation(t, start, end) {\n        return this.linearInterpolation(2 * t - t * t, start, end);\n      },\n      b3Friction1: function b3Friction1(x) {\n        return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n      },\n      b3Friction2: function b3Friction2(x) {\n        return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2.;\n      },\n      b3Friction3: function b3Friction3(x) {\n        return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\n      },\n      b3Nobounce: function b3Nobounce(tension) {\n        var friction = 0;\n\n        if (tension <= 18) {\n          friction = this.b3Friction1(tension);\n        } else if (tension > 18 && tension <= 44) {\n          friction = this.b3Friction2(tension);\n        } else {\n          friction = this.b3Friction3(tension);\n        }\n\n        return friction;\n      }\n    });\n    util.extend(SpringConfig, {\n      // Convert an origami Spring tension and friction to Rebound spring\n      // constants. If you are prototyping a design with Origami, this\n      // makes it easy to make your springs behave exactly the same in\n      // Rebound.\n      fromOrigamiTensionAndFriction: function fromOrigamiTensionAndFriction(tension, friction) {\n        return new SpringConfig(OrigamiValueConverter.tensionFromOrigamiValue(tension), OrigamiValueConverter.frictionFromOrigamiValue(friction));\n      },\n      // Convert an origami PopAnimation Spring bounciness and speed to Rebound\n      // spring constants. If you are using PopAnimation patches in Origami, this\n      // utility will provide springs that match your prototype.\n      fromBouncinessAndSpeed: function fromBouncinessAndSpeed(bounciness, speed) {\n        var bouncyConversion = new rebound.BouncyConversion(bounciness, speed);\n        return this.fromOrigamiTensionAndFriction(bouncyConversion.bouncyTension, bouncyConversion.bouncyFriction);\n      },\n      // Create a SpringConfig with no tension or a coasting spring with some\n      // amount of Friction so that it does not coast infininitely.\n      coastingConfigWithOrigamiFriction: function coastingConfigWithOrigamiFriction(friction) {\n        return new SpringConfig(0, OrigamiValueConverter.frictionFromOrigamiValue(friction));\n      }\n    });\n    SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);\n    util.extend(SpringConfig.prototype, {\n      friction: 0,\n      tension: 0\n    }); // Here are a couple of function to convert colors between hex codes and RGB\n    // component values. These are handy when performing color\n    // tweening animations.\n\n    var colorCache = {};\n\n    util.hexToRGB = function (color) {\n      if (colorCache[color]) {\n        return colorCache[color];\n      }\n\n      color = color.replace('#', '');\n\n      if (color.length === 3) {\n        color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n      }\n\n      var parts = color.match(/.{2}/g);\n      var ret = {\n        r: parseInt(parts[0], 16),\n        g: parseInt(parts[1], 16),\n        b: parseInt(parts[2], 16)\n      };\n      colorCache[color] = ret;\n      return ret;\n    };\n\n    util.rgbToHex = function (r, g, b) {\n      r = r.toString(16);\n      g = g.toString(16);\n      b = b.toString(16);\n      r = r.length < 2 ? '0' + r : r;\n      g = g.length < 2 ? '0' + g : g;\n      b = b.length < 2 ? '0' + b : b;\n      return '#' + r + g + b;\n    };\n\n    var MathUtil = rebound.MathUtil = {\n      // This helper function does a linear interpolation of a value from\n      // one range to another. This can be very useful for converting the\n      // motion of a Spring to a range of UI property values. For example a\n      // spring moving from position 0 to 1 could be interpolated to move a\n      // view from pixel 300 to 350 and scale it from 0.5 to 1. The current\n      // position of the `Spring` just needs to be run through this method\n      // taking its input range in the _from_ parameters with the property\n      // animation range in the _to_ parameters.\n      mapValueInRange: function mapValueInRange(value, fromLow, fromHigh, toLow, toHigh) {\n        var fromRangeSize = fromHigh - fromLow;\n        var toRangeSize = toHigh - toLow;\n        var valueScale = (value - fromLow) / fromRangeSize;\n        return toLow + valueScale * toRangeSize;\n      },\n      // Interpolate two hex colors in a 0 - 1 range or optionally provide a\n      // custom range with fromLow,fromHight. The output will be in hex by default\n      // unless asRGB is true in which case it will be returned as an rgb string.\n      interpolateColor: function interpolateColor(val, startColor, endColor, fromLow, fromHigh, asRGB) {\n        fromLow = fromLow === undefined ? 0 : fromLow;\n        fromHigh = fromHigh === undefined ? 1 : fromHigh;\n        startColor = util.hexToRGB(startColor);\n        endColor = util.hexToRGB(endColor);\n        var r = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));\n        var g = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));\n        var b = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));\n\n        if (asRGB) {\n          return 'rgb(' + r + ',' + g + ',' + b + ')';\n        } else {\n          return util.rgbToHex(r, g, b);\n        }\n      },\n      degreesToRadians: function degreesToRadians(deg) {\n        return deg * Math.PI / 180;\n      },\n      radiansToDegrees: function radiansToDegrees(rad) {\n        return rad * 180 / Math.PI;\n      }\n    };\n    util.extend(util, MathUtil); // Utilities\n    // ---------\n    // Here are a few useful JavaScript utilities.\n    // Lop off the first occurence of the reference in the Array.\n\n    function removeFirst(array, item) {\n      var idx = array.indexOf(item);\n      idx != -1 && array.splice(idx, 1);\n    }\n\n    var _onFrame;\n\n    if (typeof window !== 'undefined') {\n      _onFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function (callback) {\n        window.setTimeout(callback, 1000 / 60);\n      };\n    }\n\n    if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {\n      _onFrame = setImmediate;\n    } // Cross browser/node timer functions.\n\n\n    util.onFrame = function onFrame(func) {\n      return _onFrame(func);\n    }; // Export the public api using exports for common js or the window for\n    // normal browser inclusion.\n\n\n    {\n      util.extend(exports, rebound);\n    }\n  })(); // Legal Stuff\n  // -----------\n\n  /**\n   *  Copyright (c) 2013, Facebook, Inc.\n   *  All rights reserved.\n   *\n   *  This source code is licensed under the BSD-style license found in the\n   *  LICENSE file in the root directory of this source tree. An additional grant\n   *  of patent rights can be found in the PATENTS file in the same directory.\n   */\n\n});\nvar rebound$1 = /*#__PURE__*/Object.freeze({\n  \"default\": rebound,\n  __moduleExports: rebound\n});\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * Polygon.\n * Create a regular polygon and provide api to compute inscribed child.\n */\n\n\nvar Polygon = function () {\n  function Polygon() {\n    var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n    var sides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var colors = arguments[3];\n    classCallCheck(this, Polygon);\n    this._radius = radius;\n    this._sides = sides;\n    this._depth = depth;\n    this._colors = colors;\n    this._x = 0;\n    this._y = 0;\n    this.rotation = 0;\n    this.scale = 1; // Get basePolygon points straight away.\n\n    this.points = this._getRegularPolygonPoints();\n  }\n  /**\n   * Get the points of any regular polygon based on\n   * the number of sides and radius.\n   */\n\n\n  createClass(Polygon, [{\n    key: '_getRegularPolygonPoints',\n    value: function _getRegularPolygonPoints() {\n      var points = [];\n      var i = 0;\n\n      while (i < this._sides) {\n        // Note that sin and cos are inverted in order to draw\n        // polygon pointing down like: ∇\n        var x = -this._radius * Math.sin(i * 2 * Math.PI / this._sides);\n        var y = this._radius * Math.cos(i * 2 * Math.PI / this._sides);\n        points.push({\n          x: x,\n          y: y\n        });\n        i++;\n      }\n\n      return points;\n    }\n    /**\n     * Get the inscribed polygon points by calling `getInterpolatedPoint`\n     * for the points (start, end) of each side.\n     */\n\n  }, {\n    key: '_getInscribedPoints',\n    value: function _getInscribedPoints(points, progress) {\n      var _this = this;\n\n      var inscribedPoints = [];\n      points.forEach(function (item, i) {\n        var start = item;\n        var end = points[i + 1];\n\n        if (!end) {\n          end = points[0];\n        }\n\n        var point = _this._getInterpolatedPoint(start, end, progress);\n\n        inscribedPoints.push(point);\n      });\n      return inscribedPoints;\n    }\n    /**\n     * Get interpolated point using linear interpolation\n     * on x and y axis.\n     */\n\n  }, {\n    key: '_getInterpolatedPoint',\n    value: function _getInterpolatedPoint(start, end, progress) {\n      var Ax = start.x;\n      var Ay = start.y;\n      var Bx = end.x;\n      var By = end.y; // Linear interpolation formula:\n      // point = start + (end - start) * progress;\n\n      var Cx = Ax + (Bx - Ax) * progress;\n      var Cy = Ay + (By - Ay) * progress;\n      return {\n        x: Cx,\n        y: Cy\n      };\n    }\n    /**\n     * Update children points array.\n     */\n\n  }, {\n    key: '_getUpdatedChildren',\n    value: function _getUpdatedChildren(progress) {\n      var children = [];\n\n      for (var i = 0; i < this._depth; i++) {\n        // Get basePolygon points on first lap\n        // then get previous child points.\n        var points = children[i - 1] || this.points;\n\n        var inscribedPoints = this._getInscribedPoints(points, progress);\n\n        children.push(inscribedPoints);\n      }\n\n      return children;\n    }\n    /**\n     * Render children, first update children array,\n     * then loop and draw each child.\n     */\n\n  }, {\n    key: 'renderChildren',\n    value: function renderChildren(context, progress) {\n      var _this2 = this;\n\n      var children = this._getUpdatedChildren(progress); // child = array of points at a certain progress over the parent sides.\n\n\n      children.forEach(function (points, i) {\n        // Draw child.\n        context.beginPath();\n        points.forEach(function (point) {\n          return context.lineTo(point.x, point.y);\n        });\n        context.closePath(); // Set colors.\n\n        var strokeColor = _this2._colors.stroke;\n        var childColor = _this2._colors.child;\n\n        if (strokeColor) {\n          context.strokeStyle = strokeColor;\n          context.stroke();\n        }\n\n        if (childColor) {\n          var rgb = rebound.util.hexToRGB(childColor);\n          var alphaUnit = 1 / children.length;\n          var alpha = alphaUnit + alphaUnit * i;\n          var rgba = 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + alpha + ')';\n          context.fillStyle = rgba; // Set Shadow.\n\n          context.shadowColor = 'rgba(0,0,0, 0.1)';\n          context.shadowBlur = 10;\n          context.shadowOffsetX = 0;\n          context.shadowOffsetY = 0;\n          context.fill();\n        }\n      });\n    }\n    /**\n     * Render.\n     */\n\n  }, {\n    key: 'render',\n    value: function render(context) {\n      context.save();\n      context.translate(this._x, this._y);\n\n      if (this.rotation !== 0) {\n        context.rotate(rebound.MathUtil.degreesToRadians(this.rotation));\n      }\n\n      if (this.scale !== 1) {\n        context.scale(this.scale, this.scale);\n      } // Draw basePolygon.\n\n\n      context.beginPath();\n      this.points.forEach(function (point) {\n        return context.lineTo(point.x, point.y);\n      });\n      context.closePath(); // Set colors.\n\n      var strokeColor = this._colors.stroke;\n      var childColor = this._colors.base;\n\n      if (strokeColor) {\n        context.strokeStyle = strokeColor;\n        context.stroke();\n      }\n\n      if (childColor) {\n        context.fillStyle = childColor;\n        context.fill();\n      }\n\n      context.restore();\n    }\n  }]);\n  return Polygon;\n}();\n\nvar Polygon$1 = /*#__PURE__*/Object.freeze({\n  Polygon: Polygon\n});\nconsole.log('Polygon');\nconsole.log(Polygon$1);\nconsole.log('rebound');\nconsole.log(rebound$1);\n/**\n * Spinner.\n * Create a canvas element, append it to the body, render polygon with\n * inscribed children, provide init and complete methods to control spinner.\n */\n\nvar Spinner = function () {\n  function Spinner(params) {\n    classCallCheck(this, Spinner);\n    var id = params.id,\n        radius = params.radius,\n        sides = params.sides,\n        depth = params.depth,\n        colors = params.colors,\n        alwaysForward = params.alwaysForward,\n        restAt = params.restAt,\n        renderBase = params.renderBase;\n\n    if (sides < 3) {\n      console.warn('At least 3 sides required.');\n      sides = 3;\n    }\n\n    this._canvas = document.createElement('canvas');\n    this._canvas.style.backgroundColor = colors.background;\n    this._canvasW = null;\n    this._canvasH = null;\n    this._canvasOpacity = 1;\n    this._centerX = null;\n    this._centerY = null;\n    this._alwaysForward = alwaysForward;\n    this._restThreshold = restAt;\n    this._renderBase = renderBase;\n    this._springRangeLow = 0;\n    this._springRangeHigh = this._restThreshold || 1; // Instantiate basePolygon.\n\n    this._basePolygon = new Polygon(radius, sides, depth, colors);\n    this._progress = 0;\n    this._isAutoSpin = null;\n    this._isCompleting = null;\n  }\n  /**\n   * Init spinner.\n   */\n\n\n  createClass(Spinner, [{\n    key: 'init',\n    value: function init(spring, autoSpin) {\n      this._addCanvas();\n\n      this._spring = spring;\n\n      this._addSpringListener();\n\n      this._isAutoSpin = autoSpin;\n\n      if (autoSpin) {\n        // Start auto spin.\n        this._spin();\n      } else {\n        // Render first frame only.\n        this._spring.setEndValue(0);\n\n        this.render();\n      }\n    }\n  }, {\n    key: '_addCanvas',\n    value: function _addCanvas() {\n      document.body.appendChild(this._canvas);\n      this._context = this._canvas.getContext('2d');\n\n      this._setCanvasSize();\n    }\n  }, {\n    key: '_setCanvasSize',\n    value: function _setCanvasSize() {\n      this._canvasW = this._canvas.width = window.innerWidth;\n      this._canvasH = this._canvas.height = window.innerHeight;\n      this._canvas.style.position = 'fixed';\n      this._canvas.style.top = 0;\n      this._canvas.style.left = 0;\n      this._centerX = this._canvasW / 2;\n      this._centerY = this._canvasH / 2;\n    }\n  }, {\n    key: '_addSpringListener',\n    value: function _addSpringListener() {\n      var ctx = this; // Add a listener to the spring. Every time the physics\n      // solver updates the Spring's value onSpringUpdate will\n      // be called.\n\n      this._spring.addListener({\n        onSpringUpdate: function onSpringUpdate(spring) {\n          var val = spring.getCurrentValue(); // Input range in the `from` parameters.\n\n          var fromLow = 0,\n              fromHigh = 1,\n              // Property animation range in the `to` parameters.\n          toLow = ctx._springRangeLow,\n              toHigh = ctx._springRangeHigh;\n          val = rebound.MathUtil.mapValueInRange(val, fromLow, fromHigh, toLow, toHigh); // Note that the render method is\n          // called with the spring motion value.\n\n          ctx.render(val);\n        }\n      });\n    }\n    /**\n     * Start complete animation.\n     */\n\n  }, {\n    key: 'setComplete',\n    value: function setComplete() {\n      this._isCompleting = true;\n    }\n  }, {\n    key: '_completeAnimation',\n    value: function _completeAnimation() {\n      // Fade out the canvas.\n      this._canvasOpacity -= 0.1;\n      this._canvas.style.opacity = this._canvasOpacity; // Stop animation and remove canvas.\n\n      if (this._canvasOpacity <= 0) {\n        this._isAutoSpin = false;\n\n        this._spring.setAtRest();\n\n        this._canvas.remove();\n      }\n    }\n    /**\n     * Spin animation.\n     */\n\n  }, {\n    key: '_spin',\n    value: function _spin() {\n      if (this._alwaysForward) {\n        var currentValue = this._spring.getCurrentValue(); // Switch the animation range used to compute the value\n        // in the `onSpringUpdate`, so to change the reverse animation\n        // of the spring at a certain threshold.\n\n\n        if (this._restThreshold && currentValue === 1) {\n          this._switchSpringRange();\n        } // In order to keep the motion going forward\n        // when spring reach 1 reset to 0 at rest.\n\n\n        if (currentValue === 1) {\n          this._spring.setCurrentValue(0).setAtRest();\n        }\n      } // Restart the spinner.\n\n\n      this._spring.setEndValue(this._spring.getCurrentValue() === 1 ? 0 : 1);\n    }\n  }, {\n    key: '_switchSpringRange',\n    value: function _switchSpringRange() {\n      var threshold = this._restThreshold;\n      this._springRangeLow = this._springRangeLow === threshold ? 0 : threshold;\n      this._springRangeHigh = this._springRangeHigh === threshold ? 1 : threshold;\n    }\n    /**\n     * Render.\n     */\n\n  }, {\n    key: 'render',\n    value: function render(progress) {\n      // Update progess if present and round to 4th decimal.\n      if (progress) {\n        this._progress = Math.round(progress * 10000) / 10000;\n      } // Restart the spin.\n\n\n      if (this._isAutoSpin && this._spring.isAtRest()) {\n        this._spin();\n      } // Complete the animation.\n\n\n      if (this._isCompleting) {\n        this._completeAnimation();\n      } // Clear canvas and save context.\n\n\n      this._context.clearRect(0, 0, this._canvasW, this._canvasH);\n\n      this._context.save(); // Move to center.\n\n\n      this._context.translate(this._centerX, this._centerY);\n\n      this._context.lineWidth = 1.5; // Render basePolygon.\n\n      if (this._renderBase) {\n        this._basePolygon.render(this._context);\n      } // Render inscribed polygons.\n\n\n      this._basePolygon.renderChildren(this._context, this._progress);\n\n      this._context.restore();\n    }\n  }]);\n  return Spinner;\n}();\n\nvar Spinner$1 = /*#__PURE__*/Object.freeze({\n  Spinner: Spinner\n});\nconsole.log(Spinner$1); // Custom SETTINGS for each demo in related index.html\n// let settings = SETTINGS || {\n//   rebound: {\n//     tension: 2,\n//     friction: 5\n//   },\n//   spinner: {\n//     radius: 80,\n//     sides: 3,\n//     depth: 4,\n//     colors: {\n//       background: '#000000',\n//       stroke: '#000000',\n//       base: '#222222',\n//       child: '#FFFFFF'\n//     },\n//     alwaysForward: true, // When false the spring will reverse normally.\n//     restAt: 0.5, // A number from 0.1 to 0.9 || null for full rotation\n//     renderBase: true // Optionally render basePolygon\n//   }\n// };\n\n/**\n * Demo.\n */\n\nvar demo = {\n  //Index 1 default\n  // settings: {\n  //   rebound: {\n  //     tension: 2,\n  //     friction: 5\n  //   },\n  //   spinner: {\n  //     radius: 80,\n  //     sides: 3,\n  //     depth: 4,\n  //     colors: {\n  //       background: '#000000',\n  //       stroke: '#000000',\n  //       base: '#222222',\n  //       child: '#FFFFFF'\n  //     },\n  //     alwaysForward: true, // When false the spring will reverse normally.\n  //     restAt: 0.5, // A number from 0.1 to 0.9 || null for full rotation\n  //     renderBase: true // Optionally render basePolygon\n  //   }\n  // },\n  spring: null,\n  spinner: null,\n\n  /**\n   * Initialize Rebound.js with settings.\n   * Rebound is used to generate a spring which\n   * is then used to animate the spinner.\n   * See more: http://facebook.github.io/rebound-js/docs/rebound.html\n   */\n  initRebound: function initRebound(settings) {\n    var settingsRebound = settings.rebound; // Create a SpringSystem.\n\n    var springSystem = new rebound.SpringSystem(); // Add a spring to the system.\n\n    demo.spring = springSystem.createSpring(settingsRebound.tension, settingsRebound.friction);\n  },\n\n  /**\n   * Initialize Spinner with settings.\n   */\n  initSpinner: function initSpinner(settings) {\n    var settingsSpinner = settings.spinner; // Instantiate Spinner.\n\n    demo.spinner = new Spinner(settingsSpinner);\n  },\n\n  /**\n   * Initialize demo.\n   */\n  init: function init(settings) {\n    var spinnerTypeAutoSpin = true; // Instantiate animation engine and spinner system.\n\n    demo.initRebound(settings);\n    demo.initSpinner(settings); // Init animation with Rebound Spring System.\n\n    demo.spinner.init(demo.spring, spinnerTypeAutoSpin);\n    {\n      // Fake loading time, in a real world just call demo.spinner.setComplete();\n      // whenever the preload will be completed.\n      setTimeout(function () {\n        demo.spinner.setComplete();\n      }, 3000);\n    }\n  },\n\n  /**\n   * Ajax Request.\n   */\n  loadSomething: function loadSomething() {\n    var oReq = new XMLHttpRequest();\n    oReq.addEventListener('progress', function (oEvent) {\n      if (oEvent.lengthComputable) {\n        var percent = Math.ceil(oEvent.loaded / oEvent.total * 100);\n        console.log('ajax loding percent', percent); // By setting the end value with the actual loading percentage\n        // the spinner will progress based on the actual ajax loading time.\n\n        demo.spring.setEndValue(percent * 0.01);\n      }\n    });\n    oReq.addEventListener('load', function (e) {\n      // Complete the loading animation.\n      demo.spinner.setComplete();\n    });\n    oReq.open('GET', '/img/something.jpg');\n    oReq.send();\n  }\n};\n\nvar SpringLoader = function (_Component) {\n  inherits(SpringLoader, _Component);\n\n  function SpringLoader(props) {\n    classCallCheck(this, SpringLoader);\n\n    var _this = possibleConstructorReturn(this, (SpringLoader.__proto__ || Object.getPrototypeOf(SpringLoader)).call(this, props));\n\n    _this.init = function () {\n      demo.init();\n    };\n\n    _this.init = _this.init.bind(_this);\n    return _this;\n  }\n\n  createClass(SpringLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      demo.init(this.props.settings);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null; // return (\n      //   <div className={styles.test}>\n      //       <button onClick={this.init}>\n      //         Show Loader\n      //       </button>\n      //   </div>\n      // );\n    }\n  }]);\n  return SpringLoader;\n}(Component);\n\nSpringLoader.defaultProps = {\n  settings: {\n    rebound: {\n      tension: 2,\n      friction: 5\n    },\n    spinner: {\n      radius: 80,\n      sides: 3,\n      depth: 4,\n      colors: {\n        background: '#000000',\n        stroke: '#000000',\n        base: '#222222',\n        child: '#FFFFFF'\n      },\n      alwaysForward: true,\n      // When false the spring will reverse normally.\n      restAt: 0.5,\n      // A number from 0.1 to 0.9 || null for full rotation\n      renderBase: true // Optionally render basePolygon\n\n    }\n  }\n};\nexport default SpringLoader;","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","require(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\n(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n"],"sourceRoot":""}